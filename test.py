from playwright.sync_api import sync_playwright, TimeoutError as PlaywrightTimeoutError
def fetch_youtube_cookies_and_headers(email, password, cookies_path='cookies.txt'):
    with sync_playwright() as p:
        browser = p.chromium.launch(
            headless=False,
            args=[
                "--disable-blink-features=AutomationControlled",
                "--no-sandbox",
                "--disable-dev-shm-usage",
            ],
        )
        context = browser.new_context(
            user_agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) "
                       "AppleWebKit/537.36 (KHTML, like Gecko) "
                       "Chrome/114.0.0.0 Safari/537.36"
        )
        page = context.new_page()

        # Login flow
        page.goto("https://accounts.google.com/signin/v2/identifier")
        page.wait_for_selector('input[type="email"]', timeout=10000)
        page.focus('input[type="email"]')
        for char in email:
            page.keyboard.type(char)
            page.wait_for_timeout(150)
        page.click('button:has-text("Next")')

        page.wait_for_load_state('networkidle', timeout=15000)  # wait for navigation

        page.wait_for_selector('input[type="password"]:visible', timeout=15000)
        page.focus('input[type="password"]')
        for char in password:
            page.keyboard.type(char)
            page.wait_for_timeout(150)
        page.click('button:has-text("Next")')

        try:
            page.wait_for_load_state("networkidle", timeout=30000)
        except PlaywrightTimeoutError:
            # Could be 2FA or captcha - just continue anyway
            pass

        # Navigate to YouTube to get relevant cookies
        page.goto("https://www.youtube.com")
        page.wait_for_load_state("networkidle", timeout=20000)


        # Get cookies
        cookies = context.cookies()

        # Convert to Netscape format string for yt-dlp
        lines = [
            "# Netscape HTTP Cookie File",
            "# This file is generated by Playwright automation",
            ""
        ]
        for c in cookies:
            domain = c['domain']
            flag = "TRUE" if domain.startswith('.') else "FALSE"
            path = c['path']
            secure = "TRUE" if c['secure'] else "FALSE"
            expires = str(c['expires']) if c['expires'] else "0"
            name = c['name']
            value = c['value']
            lines.append("\t".join([domain, flag, path, secure, expires, name, value]))
        netscape_cookies = "\n".join(lines)

        # Save cookies to file
        with open(cookies_path, "w") as f:
            f.write(netscape_cookies)

        # Get headers
        user_agent = page.evaluate("() => navigator.userAgent")
        accept_language = page.evaluate("() => navigator.language")

        browser.close()

        return {
            "cookies_file": cookies_path,
            "headers": {
                "User-Agent": user_agent,
                "Accept-Language": accept_language
            }
        }
        
fetch_youtube_cookies_and_headers("crce.9939.ce@gmail.com", "crce.9939.ce@7769030868")